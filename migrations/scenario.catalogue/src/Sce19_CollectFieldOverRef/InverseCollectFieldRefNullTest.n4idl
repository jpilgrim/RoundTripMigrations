/*
 * Copyright (c) 2018 Luca Beurer-Kellner
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Luca Beurer-Kellner - Initial API and implementation
 */
import {CollectField} from "Sce19_CollectFieldOverRef/CollectField";
import {FunctionContextRoundTripTest} from "com/enfore/n4js/n4idl/context/FunctionContextRoundTripTest";
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";


@VersionAware
export public class InverseCollectFieldRefNullTest 
	extends FunctionContextRoundTripTest<CollectField#2, CollectField#1> {
	
	@Override
	public instantiateOriginal() : CollectField#2 {
		const cf = new CollectField#2();
		cf.field = "someValue";
		cf.reference = null;
		return cf;
	}
	
	@Override
	public assertMigratedInstance(migrated: CollectField#1) {
		Assert.isNotNull(migrated.reference);
		Assert.equal(migrated.reference.someOtherField, "someOtherDefaultValue");
		Assert.equal(migrated.reference.field, "someValue");
	}
	
	@Override
	public assertRoundTripInstance(roundTrip: CollectField#2) {
		Assert.deepEqual(this.instantiateOriginal(), roundTrip);
	}
}
