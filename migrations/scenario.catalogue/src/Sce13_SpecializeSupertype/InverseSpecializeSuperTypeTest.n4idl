/*
 * Copyright (c) 2018 Luca Beurer-Kellner
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Luca Beurer-Kellner - Initial API and implementation
 */
import {SpecializeSuperType} from "Sce13_SpecializeSupertype/SpecializeSuperType";
import {FunctionContextRoundTripTest} from "com/enfore/n4js/n4idl/context/FunctionContextRoundTripTest";
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";


@VersionAware
export public class InverseSpecializeSuperTypeTest 
	extends FunctionContextRoundTripTest<SpecializeSuperType#2, SpecializeSuperType#1> {
	
	@Override
	public instantiateOriginal() : SpecializeSuperType#2 {
		const sst = new SpecializeSuperType#2();
		sst.superField = "someValue";
		return sst;
	}
	
	@Override
	public assertMigratedInstance(migrated: SpecializeSuperType#1) {
		// instance should be empty
		Assert.equal(Object.keys(migrated).length, 0, "The migrated instance is empty in terms of keys.");
	}
	
	@Override
	public assertRoundTripInstance(roundTrip: SpecializeSuperType#2) {
		Assert.deepEqual(this.instantiateOriginal(), roundTrip);
	}
}
