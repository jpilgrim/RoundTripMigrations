/*
 * Copyright (c) 2018 Luca Beurer-Kellner
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Luca Beurer-Kellner - Initial API and implementation
 */
import {SetMap} from "org/eclipse/n4js/n4idl/util/SetMap";

/**
 * A power set, that is a set of arrays.
 * 
 * Order-sensitive:
 * 
 * <code>
 * const p = new PowerArraySet<int>();
 * p.add([1,2])
 * 
 * p.has([1,2]) => true
 * p.has([2,1]) => false
 * </code>
 */
export public class PowerArraySet<ValueT> {
	private internalMap = new SetMap<ValueT, Object>();
	
	/** Adds the given array to this set. */
	public add(values : [ValueT]) {
		this.internalMap.set(values, values);
	}
	
	/** Returns {@code true} iff this set contains an array
	 * which holds the same elements as {@code values}*/
	public has(values : [ValueT]) {
		return this.internalMap.has(values);
	}
	
	/** Removes the array from this set, which holds the same
	 * elements as {@code values}. */
	public remove(values : [ValueT]){
		if (values == null) { return; } // do nothing on null
		this.internalMap.set(values, null);
	}
}