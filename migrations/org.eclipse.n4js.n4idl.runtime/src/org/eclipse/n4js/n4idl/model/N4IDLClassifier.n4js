/*
 * Copyright (c) 2018 Luca Beurer-Kellner
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Luca Beurer-Kellner - Initial API and implementation
 */
import {N4IDLMigratable} from "org/eclipse/n4js/n4idl/model/N4IDLMigratable";
import {N4TypeUtils} from "org/eclipse/n4js/n4idl/model/N4TypeUtils";
/** 
 * Meta-representation complementing {@link N4Classifier} by
 * allowing access to N4IDL-specific meta-information (such as migrations
 * and implemented interfaces).
 */
export public class N4IDLClassifier<ClassifierT extends Object> extends N4IDLMigratable<ClassifierT> {
	private const IMPLEMENTED_INTERFACES_STATIC_FIELD = "$implementedInterfaces__n4";
	
	/**
	 * Returns a new {@link N4IDLClassifier} instance for the given
	 * {@link N4Object} or {@code type{N4Object}}.
	 * 
	 * Returns {@code null} if the n4Object is not a valid N4IDL classifier.
	 */
	@Override
	public static <ClassifierT extends Object> of(n4Object : ClassifierT|type{ClassifierT}) : N4IDLClassifier<ClassifierT> {
		// depending on n4Object being an instance  of constructor, obtain constructor
		const objectConstructor : type{ClassifierT} = N4TypeUtils.isN4Type(n4Object) ? 
			n4Object as type{ClassifierT} :
			n4Object.constructor;
		
		if (!objectConstructor.hasOwnProperty(N4IDLClassifier.IMPLEMENTED_INTERFACES_STATIC_FIELD) || 
			!N4IDLMigratable.isMigratable(objectConstructor)) {
			return null;
		}
		
		return new N4IDLClassifier<ClassifierT>(objectConstructor);
	}
	
	/**
	 * Private constructor, please use {@link N4IDLClassifier#of} for instantiation.
	 */
	private constructor(wrappedType: type{ClassifierT}) {
		super(wrappedType);
	}
	
	/**
	 * All (directly) implemented interfaces of this classifier.
	 */
	public get implementedInterfaces() : [type{? extends Object}] {
		return N4TypeUtils.dynamic(this.wrappedType)[N4IDLClassifier.IMPLEMENTED_INTERFACES_STATIC_FIELD]
			as [type{? extends Object}];
	}
}