/*
 * Copyright (c) 2018 Luca Beurer-Kellner
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Luca Beurer-Kellner - Initial API and implementation
 */
import { Assert } from "org/eclipse/n4js/mangelhaft/assert/Assert"
import {Type} from "com/enfore/n4js/n4idl/objectgraph/Type";

/** 
 * Basic tests for {@link Type}.
 */
export public class TypeTest {

	@Test
	testTypeOfPrimitives() {
		const typeOfThree = Type.of(3)
		Assert.equal(typeOfThree.getName(), "number");
		Assert.isTrue(typeOfThree.isBuiltIn());
		
		const typeOfString = Type.of("hello")
		Assert.equal(typeOfString.getName(), "string");
		Assert.isTrue(typeOfString.isBuiltIn());
	}
	
	@Test
	testTypeOfObject() {
		const object = new TestClass();
		object.field = new TestClass();
		
		const typeOfObject = Type.of(object);
		Assert.equal(typeOfObject.getName(), "TestClass");
		
		const typeOfObjectField = Type.of(object.field);
		Assert.equal(typeOfObjectField.getName(), "TestClass");
		
		const typeOfPrimitiveUninitializedField = Type.of(object.value);
		Assert.equal(typeOfPrimitiveUninitializedField.getName(), "undefined");
		Assert.equal(typeOfPrimitiveUninitializedField.isBuiltIn(), true);
	}

}

class TestClass {
	field : TestClass
	value : int
}
