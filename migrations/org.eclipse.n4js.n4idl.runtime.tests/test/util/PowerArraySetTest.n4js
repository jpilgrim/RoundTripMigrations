/*
 * Copyright (c) 2018 Luca Beurer-Kellner
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Luca Beurer-Kellner - Initial API and implementation
 */
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";
import {ErrorPrimitiveType} from "org/eclipse/n4js/mangelhaft/assert/ErrorPrimitiveType";
import {PowerArraySet} from "org/eclipse/n4js/n4idl/util/PowerArraySet";
/**
 * Basic unit tests wrt {@link PowerArraySet}.
 */
export public class PowerArraySetTest {
	@Test public testSimpleAddHasRemove() {
		const s = new PowerArraySet<any>();
		
		const v1 = 1;
		const v2 = {ob: "ject"};
		const v3 = function f() {};
		const v4 = "unused";
		
		s.add([v1]);
		s.add([v2]);
		s.add([v3]);
		s.add([v1,v3]);
		
		Assert.isTrue(s.has([v1]), "the set contains v1");
		Assert.isTrue(s.has([v2]), "the set contains v2");
		Assert.isTrue(s.has([v3]), "the set contains v3");
		Assert.isTrue(s.has([v1, v3]), "the set contains v1, v3");
		
		Assert.isFalse(s.has([v4]), "the set does not contain unrelated value v4");
		Assert.isFalse(s.has([v1, v4]), "the set does not contain v1, v4");
		
		s.remove([v1]);
		
		Assert.isFalse(s.has([v1]), "the set does not contain v1 anymore");
	}
	
	@Test public testNullUndefValues() {
		const s = new PowerArraySet<any>();
		
		// add null value
		Assert.throws(() => s.add(null), ErrorPrimitiveType.STRING, "Adding null to set throws an error.");
		// add undef value
		Assert.throws(() => s.add(undefined), ErrorPrimitiveType.STRING, "Adding undefined to set throws an error.");
		
		// remove null does nothing
		Assert.doesNotThrow(() => s.remove(null), ErrorPrimitiveType.STRING, "Removing null does not throw an error.");
		// remove undef does nothing
		Assert.doesNotThrow(() => s.remove(undefined), ErrorPrimitiveType.STRING, "Removing undefined does not throw an error.");
		
		Assert.isFalse(s.has(null), "a set never contains null");
		Assert.isFalse(s.has(undefined), "a set never contains undefined");
	}
}