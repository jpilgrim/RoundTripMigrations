/**
 * N4JS module which mimics the version and migration declarations 
 * of an N4IDL module, including the registration of migrations with
 * {@link MigrationRegistry}.
 */

export public class Sub#1 {
	value : string
}

export public class Combined#2 {
	value1 : string
	value2 : string
}

export public class A#1 {
	public field1 : string
	
	public sub1 : Sub
	public sub2 : Sub
}
export public class A#2 {
	public field2 : string
	
	public combined : Combined
}

@Migration
function migrateA1To2(a1 : A#1) : A#2 {
	const a2 = new A#2();
	a2.field2 = a1.field1;
	
	a2.combined = migrate(a1.sub1, a1.sub2);
	
	return a2;
}

@Migration
function migrateA2To1int(a2 : A#2, i : int) : A#1 {
	return null;
}

@Migration
function migrateA2To1(a2 : A#2) : A#1 {
	const a1 = new A#1();
	a1.field1 = a2.field2;
	
	let subs = migrate(a2.combined);
	
	a1.sub1 = subs.sub1;
	a1.sub2 = subs.sub2;
	
	return a1;
}

@Migration(1,2)
function migrate2Sub1toCombined(sub1: Sub#1, sub2: Sub#1) : Combined#2 {
	const combined = new Combined#2();
	
	combined.value1 = sub1.value;
	combined.value2 = sub2.value;
	
	return combined;
}

@Migration
function migrateCombinedto2Sub1(combined : Combined#2) : ~Object with {sub1 : Sub#1, sub2: Sub#1} {
	const sub1 = new Sub#1();
	const sub2 = new Sub#1();
	
	sub1.value = combined.value1;
	sub2.value = combined.value2;
	
	return {sub1 : sub1, sub2: sub2};
}