import {SuperClassifierIterator} from "org/eclipse/n4js/n4idl/resolution/SuperClassifierIterator";

/**
 * A {@link TypeDistanceComputer} can be used to compute the distance
 * between two types, thus it is giving a measure for how related two types are.
 */
export public class TypeDistanceComputer {
	/**
	 * Returns the type distance from {@code t1} to {@code t2}.
	 * 
	 * Returns {@code Infinity} if t2 is not reachable from t1 or
	 * if t1 is more generic than t2 (subtype).
	 */
	public compute(from : type{? extends Object}, to : type{Object}) : int {
		let superClassifiers = SuperClassifierIterator.for(from)
		for (let entry of superClassifiers) {
			if (entry.ctor === to) {
				return entry.level;
			}
		}
		return Infinity;
	}
	
	/**
	 * Returns the type distance from the type of object {@code o} to type {@code to}.
	 */
	public computeObject(o : Object, to : type{Object}) : int {
		return this.compute(o.constructor, to);
	}
}