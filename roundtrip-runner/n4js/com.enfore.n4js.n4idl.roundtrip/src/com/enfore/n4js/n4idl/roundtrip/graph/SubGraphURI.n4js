/** 
 * A {@link SubGraphURI} may be used to address a sub-graph/instance in one 
 * of the round-trip stages.
 */
export public class SubGraphURI {
	/** The stage of this sub-graph URI. (e.g. roundTrip, migrated) */
	public stage : string
	/** The index in the object-graph registry. */
	public stageId : int

	@Override
	public toString() : string {
		return this.stage + "." + this.stageId;
	}

	public equals(uri : SubGraphURI) : boolean {
		return uri.stage == this.stage && uri.stageId == this.stageId;
	}
	
	/** Creates a new {@link SubGraphURI} for the given id and stage. */
	static createURI(stage : string, stageId : int) : SubGraphURI {
		const u = new SubGraphURI();
		u.stage = stage;
		u.stageId = stageId;
		return u;
	}
}