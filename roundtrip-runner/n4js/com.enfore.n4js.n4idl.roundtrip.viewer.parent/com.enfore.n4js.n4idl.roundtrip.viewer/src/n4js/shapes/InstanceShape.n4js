import {Util} from "jointjs";
import {Generic} from "jointjs-shapes";

export public class InstanceShape extends Generic {
    private markup = [
			'<g class="rotatable">',
				'<g class="scalable">',
					'<rect class="uml-class-name-rect"/>',
					'<rect class="uml-class-attrs-rect"/>',
				'</g>',
				'<text class="uml-class-name-text"/><text class="uml-class-attrs-text"/>',
				
			'</g>'
		].join('');

	const defaultAttributes = {
			attrs: {
				// this will be overridden by layouting
				'rect': {'width': "10pt"},
				'.uml-class-name-text': {
					'ref': '.uml-class-name-rect',
					'ref-y': .5,
					'ref-x': .5,
					'text-anchor': 'middle',
					'y-alignment': 'middle',
					'font-weight': 'bold',
					'fill': 'black',
					'font-size': 12,
					'font-family': 'Helvetica'
				},
				'.uml-class-attrs-text': {
					'ref': '.uml-class-attrs-rect',
					'ref-x': 5,
					'fill': 'black',
					'font-size': 12,
					'font-family': 'Helvetica',
					'ref-y': 0.5,
					'y-alignment': 'middle',
				},
				'.uml-class-name-rect': {
					'fill': '#f2f2f2',
					'stroke': "black",
					'stroke-width': 0.5,
					'font-family': "Helvetica"
				},
				'.uml-class-attrs-rect': {
					'fill': 'white',
					'stroke': "black",
					'stroke-width': 0.5,
					'font-family': "Helvetica"
				}
			},
			name: "Default",
			attributes: []
		};

	public constructor(attrs: Object+) {
		super(Util.assign(Util.defaultsDeep(
			// most importantly, set the type name
			{type: N4Type.of(InstanceShape).name}, 
			// use constructor arguments as attributes
			attrs,
			// fall-back defaults
			InstanceShape.defaultAttributes, 
			this)));
	}

    @Override
    public initialize() {
        this.on('change:name change:attributes', () => {
            this.updateRectangles();
            this.trigger('uml-update');
        }, this);

        this.updateRectangles();
        
        super.initialize.apply(this, arguments as Array<?>);
    }

    public getClassName() : string{
        return this.get('name') as string;
    }

    public updateRectangles() {
        var attrs : any+ = this.get("attrs");
        const headerHeight = 20;
        
		attrs['.uml-class-name-text'].text = this.getClassName();
        attrs['.uml-class-name-rect'].height = headerHeight;
        attrs['.uml-class-name-rect'].transform = 'translate(0, 0)';

		const attributes = this.get('attributes') as Array<string>;

		attrs['.uml-class-attrs-text'].text = attributes.join('\n');
		attrs['.uml-class-attrs-rect'].height = attributes.length * 15;
		attrs['.uml-class-attrs-rect'].transform = 'translate(0,' + headerHeight + ')';
    }
}