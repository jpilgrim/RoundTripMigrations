import {AbstractRoundTripTest} from "com/enfore/n4js/n4idl/roundtrip/AbstractRoundTripTest";
import {PullUpFeature} from "Ex07_PullUpFeature/PullUpFeature";
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";

/**
 * PullUpFeature
 * 
 * PullUpFeature#1 -> PullUpFeature#2 -> PullUpFeature#1
 * 
 * The field 'field' of PullUpFeature is pulled up into the super class
 * 'SuperClass' in version 2.
 * 
 * Pull Up Feature: model-preserving
 * Push Down Feature: unsafely model-preserving
 */
@VersionAware
export public class PullUpFeatureTest extends AbstractRoundTripTest<PullUpFeature#1, PullUpFeature#2> {
	
	@Override
	public instantiateOriginal() : PullUpFeature#1 {
		return new PullUpFeature#1({field: "pullUpValue"}); 
	}
	
	@Override
	public migrate(o2 : PullUpFeature#1) : PullUpFeature#2 {
		return new PullUpFeature#2({field: o2.field});
	}

	@Override
	public migrateBack(o1 : PullUpFeature#2) : PullUpFeature#1 {
		return new PullUpFeature#1({field: o1.field});
	}
	
	@Override
	public assertRoundTripInstance(roundTrip : PullUpFeature#1) {
		Assert.equal(roundTrip.field, "pullUpValue", "Pulled up field is the same in the round-trip instance.");	
	}
	@Override
	public assertMigratedInstance(migrated : PullUpFeature#2) {
		Assert.equal(migrated.field, "pullUpValue", "Pulled up field is the same in the migrated instance.");
	}
}
	