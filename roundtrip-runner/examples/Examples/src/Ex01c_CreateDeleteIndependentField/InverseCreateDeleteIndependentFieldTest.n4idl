import {Style} from "Ex01c_CreateDeleteIndependentField/CreateDeleteIndependentField";

import {InverseRoundTrip} from "com/enfore/n4js/n4idl/roundtrip/InverseRoundTrip";

import {RoundTripMigration} from "com/enfore/n4js/n4idl/roundtrip/RoundTripMigration";
import {CreateDeleteIndependentFieldTest} from "Ex01c_CreateDeleteIndependentField/CreateDeleteIndependentFieldTest"
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";

/**
 * 
 * Inverse CreateDeleteIndependentField.
 * 
 * CreateDeleteIndependentField#2 -> CreateDeleteIndependentField#1 -> CreateDeleteIndependentField#2
 * 
 * Inverse round-trip of {@link CreateDeleteIndependentFieldTest}.
 */
@VersionAware
export public class InverseCreateDeleteIndependentFieldTest extends InverseRoundTrip<Style#1, Style#2> {
	
	@Override
	public getRoundTripMigration() : RoundTripMigration<Style#1, Style#2> {
		return new CreateDeleteIndependentFieldTest();
	}
	
	@Override
	public instantiateOriginal() : Style#2 {
		return new Style#2({
			backgroundColor: "white"
		})
	}
	
	@Override
	public assertMigratedInstance(migrated : Style#1) {
		Assert.equal(migrated.foregroundColor, "defaultForeground", "'foregroundColor' assumes a default value.")
		Assert.equal(migrated.backgroundColor, "white", "'backgroundColor' has the initial value.")
	}
	
	@Override
	public assertRoundTripInstance(roundTrip : Style#2) {
		Assert.equal(roundTrip.backgroundColor, "white", "The 'backgroundColor' has the initial value.");
	}
}
