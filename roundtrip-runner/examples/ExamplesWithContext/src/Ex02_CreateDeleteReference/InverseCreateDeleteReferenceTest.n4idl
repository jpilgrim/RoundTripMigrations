import {CreateDeleteReference} from "Ex02_CreateDeleteReference/CreateDeleteReference";
import {InstanceAssert} from "com/enfore/n4js/n4idl/assert/InstanceAssert";
import {FunctionContextRoundTripTest} from "com/enfore/n4js/n4idl/context/FunctionContextRoundTripTest";
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";

@VersionAware
export public class InverseCreateDeleteReferenceTest extends FunctionContextRoundTripTest<CreateDeleteReference#2, CreateDeleteReference#1> {
	
	@Override
	public instantiateOriginal() : CreateDeleteReference#2 {
		let o1 = new CreateDeleteReference#2();
	
		o1.unrelated = "someUnrelatedValue";
		
		return o1;
	}
	
	
	@Override
	public assertRoundTripInstance(roundTrip : CreateDeleteReference#2) {
		InstanceAssert.equalSerialisation(roundTrip, this.instantiateOriginal(),
			"The serialisation of the round-trip matches the original serialisation.");
	}
	
	@Override
	public assertMigratedInstance(migrated : CreateDeleteReference#1) {
		Assert.equal(migrated.reference.value, "defaultValue", 
			"The 'reference' has been set to a default value/instance.")
	}
}
