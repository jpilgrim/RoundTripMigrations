// @section v1
export public class CreateDeleteReference#1 {
	reference : ReferencedElement
	
	unrelated : string 
}

export public class ReferencedElement#1 {
	public value : string
	constructor(@Spec spec : ~i~this) {}
}

// @section v2
export public class CreateDeleteReference#2 {
	unrelated : string
}


export public class ReferencedElement#2 {
	public value : string
	constructor(@Spec spec : ~i~this) {}
}

// @section migrations
@Migration
export function migrate(o1 : CreateDeleteReference#1) : CreateDeleteReference#2 {
	let o2 = new CreateDeleteReference#2();

	o2.unrelated = o1.unrelated;

	return o2;
}

@Migration
export function migrateBack(o2 : CreateDeleteReference#2) : CreateDeleteReference#1 {
	// obtain previous revision
	 const previousRevision = context.getTrace(o2)[0] as CreateDeleteReference#1 
	 	|| {} as CreateDeleteReference#1;
	
	let o1 = new CreateDeleteReference#1();

	o1.unrelated = o2.unrelated;
	// choose a default value for 'reference' or recover previous value
	o1.reference = previousRevision.reference 
		|| new ReferencedElement#1({value: "defaultValue"});  
	
	return o1;
}
