// @section v1
export public class CollectField#1 {
	public reference? : SourceClass
}
export public class SourceClass#1 {
	public field : string
	public someOtherField : string
}

// @section v2
export public class CollectField#2 {
	public reference? : SourceClass
	public field? : string
}

export public class SourceClass#2 {
	public someOtherField : string
}

// @section migrations
@Migration function migrateCollectField(cf : CollectField#1) : CollectField#2 {
	const cf2 = new CollectField#2();
	
	// migrate value of 'field', if 'reference' is present
	cf2.field = cf.reference == null ? null : cf.reference.field;
	
	if (cf.reference == null) {
		cf2.reference = null;
	} else {
		const previousRevision = context.getTrace(cf)[0] as CollectField#2;
		// If in the previous revision 'reference' was null
		// and 'reference.someOtherField' holds the unmodified default value...
		if (previousRevision &&
			previousRevision.reference == null &&
			!context.isModified(cf.reference, "someOtherField")) {
			// ... migrate back to 'reference' being null
			cf2.reference = null;
		} else {
			// otherwise, 'someOtherField' holds new information (changed))
			cf2.reference = migrate(cf.reference);
		}
	}
	
	return cf2;
}

@Migration 
function migrateBackSourceClass(s : SourceClass#2, fieldValue : string) : SourceClass#1 {
	
	const sc1 = new SourceClass#1();
	
	// migrate 'someOtherField'
	sc1.someOtherField = s.someOtherField;
	// use given value for 'field' or a default value
	sc1.field = fieldValue || "defaultValue";
	
	return sc1;
}

@Migration function migrateBackCollectField(cf : CollectField#2) : CollectField#1 {
	const cf1 = new CollectField#1();

	if (cf.reference != null) {
		cf1.reference = migrate(cf.reference, cf.field);
	} else {
		if (cf.field != null) {
			cf1.reference = new SourceClass#1();
			cf1.reference.field = cf.field;
			cf1.reference.someOtherField = "someOtherDefaultValue";
		} else {
			cf1.reference = null;
		}
	}
	
	return cf1;
} 
// @endsection

@Migration function migrateSourceClass(s : SourceClass#1) : SourceClass#2 {
	const sc2 = new SourceClass#2();
	
	sc2.someOtherField = s.someOtherField;
	
	return sc2;
}
