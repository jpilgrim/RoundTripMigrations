import * as Migrations from "org/eclipse/n4js/n4idl/migrations/Migrations";

// @section v1
export public class GeneralizeAttributeArray#1 {
	public field : Element
}
export public class Element#1 {
	public value : string
}
// @section v2
export public class GeneralizeAttributeArray#2 {
	public field : Array<Element>
}
export public class Element#2 {
	public value : string
}
// @section migrations
@Migration
export function migrate(o1 : GeneralizeAttributeArray#1) 
	: GeneralizeAttributeArray#2 {
	let o2 = new GeneralizeAttributeArray#2();

	let elements : Array<Element#2> = [];
	
	const previousRevision = context.getTrace(o1)[0] as GeneralizeAttributeArray#2;
	
	// detect default value of 'o1.field'
	if (previousRevision !== undefined
		&& previousRevision.field.length == 0 && !context.isModified(o1, "field")) {
		// restore empty array, if default value in 'o1.field' remained unmodified
		elements = [];
	} else {
		// add migrated field value as first array element
		elements.push(migrate(o1.field));
		
		// if a previous revision can be obtained
		if (previousRevision != undefined) {
			// add all previousRevision elements, but the first one
			previousRevision.field.slice(1)
				.forEach(e => elements.push(Migrations.copy(Element#2, e)));
		}
	}
	
	// Finally assign the array of migrated elements to 
	// the migrated instance field 'field'
	o2.field = elements;

	return o2;
}
@Migration
export function migrateBack(o2 : GeneralizeAttributeArray#2) : GeneralizeAttributeArray#1 {	
	let o1 = new GeneralizeAttributeArray#1();

	// migrate only the first element of the array
	o1.field = Migrations.migrateElementAt(o2.field, 0, createDefaultElement());
	
	return o1;
}

// @endsection
@Migration
export function migrateElement(e1 : Element#1) : Element#2 {
	let e2 = new Element#2();
	e2.value = e1.value;
	return e2;
}
// @endsection
@Migration
export function migrateBackElement(e2 : Element#2) : Element#1 {
	let e1 = new Element#1();
	e1.value = e2.value;
	return e1;
}
@VersionAware
function createDefaultElement() : Element#1 {
	let e1 = new Element#1();
	e1.value = "defaultValue";
	return e1;
}