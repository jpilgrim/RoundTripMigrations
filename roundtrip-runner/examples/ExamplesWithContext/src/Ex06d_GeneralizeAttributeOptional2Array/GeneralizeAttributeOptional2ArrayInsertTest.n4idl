import {Element} from "Ex06d_GeneralizeAttributeOptional2Array/GeneralizeAttributeOptional2Array";
import {GeneralizeAttributeOptional2Array} from "Ex06d_GeneralizeAttributeOptional2Array/GeneralizeAttributeOptional2Array";
import {ModificationMappingTest} from "com/enfore/n4js/n4idl/context/ModificationMappingTest";
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";

/**  */
@VersionAware
export public class GeneralizeAttributeOptional2ArrayInsertTest extends 
	ModificationMappingTest<GeneralizeAttributeOptional2Array#1, GeneralizeAttributeOptional2Array#2> {

	@Override
	public instantiateOriginal() : GeneralizeAttributeOptional2Array#1 {
		let o1 = new GeneralizeAttributeOptional2Array#1();
	
		o1.field = new Element#1();
		o1.field.value = "originalValue";
		
		return o1;
	}
	
	@Override
	public modifyMigratedInstance(migrated : GeneralizeAttributeOptional2Array#2) {
		// insert a new element at index 0
		const newElement = new Element#2();
		newElement.value = "newElementValue";
		migrated.field.splice(0, 0, newElement)
	}

	@Override
	public modifyOriginalInstance(original : GeneralizeAttributeOptional2Array#1)Â {
		// only the replacing of the first elements has an effect on #1
		original.field.value = "newElementValue";
	}
	
	@Override
	public assertMigratedInstance(migrated: GeneralizeAttributeOptional2Array#2) {
		Assert.equal(migrated.field.length, 1, "The original 'field' has been migrated to a single-element array.");
		Assert.equal(migrated.field[0].value, "originalValue", "The single element of the migrated 'field' has the original value.");
	}
}
