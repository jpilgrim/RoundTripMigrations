import {ExtractSuperClass} from "Ex11_ExtractSuperClass/ExtractSuperClass";
import {FunctionContextRoundTripTest} from "com/enfore/n4js/n4idl/context/FunctionContextRoundTripTest";
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";


@VersionAware
export public class ExtractSuperClassTest 
	extends FunctionContextRoundTripTest<ExtractSuperClass#2, ExtractSuperClass#1> {
	
	@Override
	public instantiateOriginal() : ExtractSuperClass#2 {
		const e = new ExtractSuperClass#2();
		e.genericField = "genericValue";
		e.specificField = "specificValue";
		return e;
	}
	
	@Override
	public assertMigratedInstance(migrated: ExtractSuperClass#1) {
		Assert.equal(migrated.genericField, "genericValue");
		Assert.equal(migrated.specificField, "specificValue");
	}
	
	@Override
	public assertRoundTripInstance(roundTrip: ExtractSuperClass#2) {
		Assert.deepEqual(this.instantiateOriginal(), roundTrip);
	}
}