import {CollectField} from "Ex17_CollectFieldOverRef/CollectField";
import {FunctionContextRoundTripTest} from "com/enfore/n4js/n4idl/context/FunctionContextRoundTripTest";
import {Assert} from "org/eclipse/n4js/mangelhaft/assert/Assert";
import {SourceClass} from "Ex17_CollectFieldOverRef/CollectField";


@VersionAware
export public class CollectFieldTest 
	extends FunctionContextRoundTripTest<CollectField#1, CollectField#2> {
	
	@Override
	public instantiateOriginal() : CollectField#1 {
		const cf = new CollectField#1();
		cf.reference = new SourceClass#1();
		cf.reference.field = "someValue";
		cf.reference.someOtherField = "someOtherValue";
		return cf;
	}
	
	@Override
	public assertMigratedInstance(migrated: CollectField#2) {
		Assert.isNotNull(migrated.reference);
		Assert.equal(migrated.reference.someOtherField, "someOtherValue");
		Assert.equal(migrated.field, "someValue");
	}
	
	@Override
	public assertRoundTripInstance(roundTrip: CollectField#1) {
		Assert.deepEqual(this.instantiateOriginal(), roundTrip);
	}
}