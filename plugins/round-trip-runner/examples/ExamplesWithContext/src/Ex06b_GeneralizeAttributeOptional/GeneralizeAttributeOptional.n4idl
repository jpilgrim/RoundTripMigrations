// @section v1
export public class GeneralizeAttributeOptional#1 {
	public field : string
}
// @section v2
export public class GeneralizeAttributeOptional#2 {
	public field? : string
}
// @endsection

// @section migrations
@Migration
export function migrate(o1 : GeneralizeAttributeOptional#1) : GeneralizeAttributeOptional#2 {
	let o2 = new GeneralizeAttributeOptional#2();
	
	const previousRevision = context.getTrace(o1)[0] as GeneralizeAttributeOptional#2

	// If 'field' has not been modified, and a previous revision could
	// be obtained 
	if (previousRevision != undefined 
		&& !context.isModified(o1, "field")) {
		// re-use the previous value for 'field'
		o2.field = previousRevision.field;
	} else {
		// otherwise copy over the value in 'field'
		o2.field = o1.field;
	}

	return o2;
}

@Migration
export function migrateBack(o2 : GeneralizeAttributeOptional#2) : GeneralizeAttributeOptional#1 {
	let o1 = new GeneralizeAttributeOptional#1();

	// use default value in case 'o2.field' is null
	o1.field = o2.field || "defaultValue";
	
	return o1;
}
